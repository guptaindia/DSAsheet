#include<bits/stdc++.h>
using namespace std;
struct node
{
	int data;
	node *next;//self referncing same name as struct
	node(int x)//constructor
	{
		data=x;
		next=NULL;
	}
};
node *reverseK(node *head,int k)
{
	node *curr = head , *prevfirst=NULL;
	bool isfirstpass = true;
	while(curr!=NULL)
	{
		node *first=curr,*prev=NULL;
		int count=0;
		while(curr!=NULL&&count<k)
		{
			node *next = curr->next;
			curr->next=prev;
			prev=curr;
			curr=next;
			count++;
		}
		if(isfirstpass)
		{
			head=prev;
			isfirstpass=false;
		}
		else
		{
			prevfirst->next=prev;
		}
		prevfirst=first;
	}
	return head;
}
void print(node *val)
{
	node *curr=val;
	while(curr!=NULL)
	{
		cout<<curr->data<<"->";
		curr=curr->next;
	}cout<<"Null"<<endl;
}
int main()
{
	node *head = new node(10);
	node *temp1=new node(20);
	node *temp2=new node(30);
	node *temp3=new node(40);
	head->next=temp1;
	temp1->next=temp2;
	temp2->next=temp3;
	print(head);
	cout<<endl;
	int k = 2;
	print(reverseK(head,k));
}
