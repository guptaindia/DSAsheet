#include<bits/stdc++.h>
using namespace std;
struct node
{
	int data;
	node *next;//self referncing same name as struct
	node(int x)//constructor
	{
		data=x;
		next=NULL;
	}
};
struct linkedlist{
	node *head;
	linkedlist()
	{
		head=NULL;
	}
	
void reverse()
{
	node *curr=head;
	node *prev=NULL;
	while(curr!=NULL)
	{
		node *next=curr->next;
		curr->next=prev;
		prev=curr;
		curr=next;
	}
	head=prev;
}
void print()
{
	node *curr=head;
	while(curr!=NULL)
	{
		cout<<curr->data<<"->";
		curr=curr->next;
	}cout<<"Null"<<endl;
}
void push(int data)
{
	node *temp=new node(data);
	temp->next=head;
	head=temp;
}
};
int main()
{
	linkedlist ll;
	ll.push(40);
	ll.push(30);
	ll.push(20);
	ll.push(10);
	cout << "Given linked list\n";
    ll.print();
 
    ll.reverse();
 
    cout << "\nReversed linked list \n";
    ll.print();

}



//one more way to do this
#include<bits/stdc++.h>
using namespace std;
struct node
{
	int data;
	node *next;//self referncing same name as struct
	node(int x)//constructor
	{
		data=x;
		next=NULL;
	}
};
node reverse(node *head)
{
	node *curr=head;
	node *prev=NULL;
	while(curr!=NULL)
	{
		node *next=curr->next;
		curr->next=prev;
		prev=curr;
		curr=next;
	}

return *prev;
}
void print(node *val)
{
	node *curr=val;
	while(curr!=NULL)
	{
		cout<<curr->data<<"->";
		curr=curr->next;
	}cout<<"Null"<<endl;
}
int main()
{
	node *head = new node(10);
	node *temp1=new node(20);
	node *temp2=new node(30);
	node *temp3=new node(40);
	head->next=temp1;
	temp1->next=temp2;
	temp2->next=temp3;
	print(head);
	cout<<endl;
	node x=reverse(head);
	print(&x);
}
