//Given a boolean matrix of size RxC where each cell contains either 0 or 1, modify it such that if a matrix cell matrix[i][j] is 1 then all the cells in its ith row and jth column will become 1.
#include<bits/stdc++.h>
using namespace std;
# define r 3
#define c 4
void modify(bool mat[r][c])
{
	bool row[r];
	bool col[c];
	int i,j;
	for(i=0;i<r;i++)
	{
		row[i]=0;
	}
	for(i=0;i<c;i++)
	{
		col[i]=0;
	}
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			if(mat[i][j]==1)
			{
				row[i]=1;
				col[j]=1;
			}
		}
	}
	 for(i=0;i<r;i++)
	 {
	 	for(j=0;j<c;j++)
	 	{
	 		if(row[i]==1||col[j]==1)
	 		{
	 			mat[i][j]=1;
			 }
		 }
	 }
}
void print(bool mat[r][c])
{
	int i,j;
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			cout<<mat[i][j];
		}
		cout<<endl;
	}
}
int main()
{
	bool mat[r][c]={{1,0,0,1},{0,0,1,0},{0,0,0,0}};
	cout<<"input matrix\n";
	print(mat);
	modify(mat);
	cout<<"after modification\n";
	print(mat);
}



//using vector approach
#include<bits/stdc++.h>
using namespace std;
void setZeroes(vector < vector < int >> & matrix) {
int col0 = 0, rows = matrix.size(), cols = matrix[0].size();
for (int i = 0; i < rows; i++) {
	//checking if 0 is present in the 0th column or not
	if (matrix[i][0] == 1) col0 = 1;
	for (int j = 1; j < cols; j++) {
	if (matrix[i][j] == 1) {
		matrix[i][0] = 1;
		matrix[0][j] = 1;
	}
	}
}
//traversing in the reverse direction and
//checking if the row or col has 0 or not
//and setting values of matrix accordingly.
for (int i = rows - 1; i >= 0; i--) {
	for (int j = cols - 1; j >= 1; j--) {
	if (matrix[i][0] == 1 || matrix[0][j] == 1) {
		matrix[i][j] = 1;
	}
	}
	if (col0 == 1) {
	matrix[i][0] = 1;
	}

}

}

int main() {
vector < vector < int >> arr;
arr = {{1, 0, 2, 1}, {3, 4, 5, 2}, {0, 3, 0, 5}};
setZeroes(arr);
cout<<"The Final Matrix is "<<endl;
for (int i = 0; i < arr.size(); i++) {
	for (int j = 0; j < arr[0].size(); j++) {
	cout << arr[i][j] << " ";
	}
	cout << "\n";
}
}
