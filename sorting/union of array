#include<bits/stdc++.h>
using namespace std;
void printunion(int a[],int b[],int m,int n)
{
	int i=0,j=0;
	while(i<m&&j<n)
	{
		if(i>0 && a[i]==a[i-1])
		{
			i++;
			continue;
		}
		if(j>0 && b[j]==b[j-1])
		{
			j++;
			continue;
		}
		if(a[i]<b[j])
		{
			cout<<a[i]<<" ";
			i++;
		}
		if(a[i]>b[j])
		{
			cout<<b[j]<<" ";
			j++;
		}
		else
		{
			cout<<a[i]<<" ";
			i++;
			j++;
		}
	}
	while(i<m)
	{
		if(i>0 && a[i]!=a[i-1])
		{
			cout<<a[i]<<" ";
			i++;
		}
	}
	while(j<n)
	{
		if(j>0 && b[j]!=b[j-1])
		{
			cout<<b[j]<<" ";
			j++;
		}
	}
}
int main()
{
	//array must be sorted before intersection
	int a[]={10,20,20,40,60};
	int m = sizeof(a)/sizeof(a[0]);
	int b[]={2,20,20,20,60};
	int n = sizeof(b)/sizeof(b[0]);
	printunion(a,b,m,n);
}
